/*
 * File: app/view/MyContainer.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyContainer', {
    extend: 'Ext.Container',

    requires: [
        'Ext.plugin.PullRefresh',
        'Ext.plugin.ListPaging'
    ],

    config: {
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                id: 'ticketSubject',
                title: '正在加载...',
                items: [
                    {
                        xtype: 'button',
                        id: 'TicketInfoButton',
                        itemId: 'mybutton',
                        iconCls: 'info'
                    },
                    {
                        xtype: 'button',
                        align: 'right',
                        id: 'TicketReplyButton',
                        itemId: 'mybutton1',
                        iconCls: 'delete'
                    }
                ]
            },
            {
                xtype: 'list',
                id: 'TicketView',
                itemId: 'mylist',
                scrollable: {
                    scroller: {
                        disabled: false
                    }
                },
                disableSelection: true,
                itemTpl: [
                    '<img src="{headImageUrl}" />',
                    '<div class="tweet">',
                    '    <span class="posted">{creatTime:timeAgoInWords}</span>',
                    '    <h2>{author}</h2>',
                    '    <div>{message}</div>',
                    '</div>',
                    '<div class=\'clear\'></div>'
                ],
                store: 'TicketViewStore',
                striped: true,
                plugins: [
                    {
                        type: 'pullrefresh'
                    }
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                id: 'bottomBar',
                itemId: 'mytoolbar',
                items: [
                    {
                        xtype: 'spacer'
                    },
                    {
                        xtype: 'textareafield',
                        height: 42,
                        id: 'messageTextArea',
                        width: 105
                    },
                    {
                        xtype: 'spacer'
                    },
                    {
                        xtype: 'button',
                        itemId: 'mybutton3',
                        text: '发送'
                    }
                ],
                listeners: [
                    {
                        fn: function(element, eOpts) {
                            var width = element.dom.offsetWidth;
                            Ext.getCmp('messageTextArea').setWidth(width - 160);

                        },
                        event: 'resize'
                    },
                    {
                        fn: function(component, eOpts) {
                            var fileItem = new Ext.ux.Fileup({
                                config: {
                                    itemId: 'fileBtn',
                                    autoUpload: false,
                                    url: 'src/php/getfile.php',
                                    name: 'userfil2e'
                                },
                                states: {
                                    browse: {
                                        text: '上传'
                                    },
                                    ready: {
                                        text: 'Load'
                                    },

                                    uploading: {
                                        text: '上传中',
                                        loading: true
                                    }
                                },
                                listeners: {
                                    'success': function() {
                                        console.log('Success');

                                        Ext.device.Notification.show({
                                            title: 'All right',
                                            message: 'File uploaded successfully',
                                            buttons: Ext.MessageBox.OK,
                                            callback: Ext.emptyFn
                                        });
                                    },
                                    'failure': function(message) {
                                        console.log('Failure');

                                        Ext.device.Notification.show({
                                            title: 'Uploading error',
                                            message: message,
                                            buttons: Ext.MessageBox.OK,
                                            callback: Ext.emptyFn
                                        });
                                    }
                                }

                            });
                            //  var bottomBar = Ext.getCmp('bottomBar');

                            this.insert(0, fileItem);
                        },
                        event: 'initialize'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onTicketInfoButtonTap',
                event: 'tap',
                delegate: '#TicketInfoButton'
            },
            {
                fn: 'onTicketReplyButtonTap',
                event: 'tap',
                delegate: '#TicketReplyButton'
            },
            {
                fn: 'onTicketViewItemTap',
                event: 'itemtap',
                delegate: '#TicketView'
            },
            {
                fn: 'onMybutton3Tap',
                event: 'tap',
                delegate: '#mybutton3'
            }
        ]
    },

    onTicketInfoButtonTap: function(button, e, eOpts) {
        var info = button.TicketInfo;
        if (!info)
        info = button.TicketInfo = Ext.widget('TicketInfo');
        var data = Ext.getStore('TicketViewStore').getProxy().getReader().rawData;
        info.setData(data);

        info.showBy(button);
    },

    onTicketReplyButtonTap: function(button, e, eOpts) {
        Ext.get('logoutForm').dom.submit();
    },

    onTicketViewItemTap: function(dataview, index, target, record, e, eOpts) {
        var image = target.element.query('div.tweet img');
        console.log(image);
    },

    onMybutton3Tap: function(button, e, eOpts) {
        var store = Ext.getStore('TicketViewStore');
        var textArea = Ext.getCmp('messageTextArea');
        var value = textArea.getValue();

        if (Ext.isEmpty(value)) 
        {
            Ext.Msg.alert('回复内容不可为空!');
            return;
        }

        var reply = MyApp.controller.MyController.replyMessage(value,function(replyJson){

            store.add(replyJson);
            textArea.setValue(); 

            var ticketView =Ext.getCmp('TicketView');
            ticketView.getScrollable().getScroller().scrollToEnd(false);

        });
    }

});